类加载器隔离机制
    不同的类加载器为相同名称的类创建了额外的名称空间。
    相同名称的类可以并存在 Java 虚拟机中，只需要用不同的类加载器来加载它们即可。
    不同类加载器加载的类之间是不兼容的，这就相当于在 Java 虚拟机内部创建了一个个相互隔离的 Java 类空间。

Java 虚拟机是如何判定两个 Java 类是相同的？
    Java 虚拟机不仅要看类的全名是否相同，还要看加载此类的类加载器是否一样。只有两者都相同的情况，才认为两个类是相同的。
    即便是同样的字节代码，被不同的类加载器加载之后所得到的类，也是不同的。
    比如一个 Java 类 com.example.Sample，编译之后生成了字节代码文件 Sample.class。两个不同的类加载器 ClassLoaderA和 ClassLoaderB分别读取了这个 Sample.class文件，并定义出两个 java.lang.Class类的实例来表示这个类。这两个实例是不相同的。对于 Java 虚拟机来说，它们是不同的类。试图对这两个类的对象进行相互赋值，会抛出运行时异常 ClassCastException。
