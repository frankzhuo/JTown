求解思路：
    把问题分解为多个子问题，只要依次求出子问题的最优解，就能得到最终问题的最优解。即，只需要考虑局部最优，就能得到全局最优。
    贪心算法是使所做的选择看起来都是当前最佳的，期望通过所做的局部最优选择来产生一个全局最优解。

局限性：
    需要先确认一个问题具有上述特点，才能使用贪心算法求解。

设计贪心算法的步骤：
    1.将优化问题转换成这样一个问题，即先做出选择，再解决剩下的一个子问题。
    2.证明原问题总是有一个最优解是贪心选择的得到的，从而说明贪心选择的安全。
    3.说明在做出贪心选择后，剩下的子问题具有这样一个性质。即如果将子问题的最优解和我们所做的贪心选择联合起来，可以得到一个更加负责的动态规划解。    

适用场景
    1、单源最短路经问题 
    2、最小生成树问题 
    3、可任意分割的背包问题。如果不可以任意分割，就需要用动态规划求解。 
    4、某些情况下，即使贪心算法不能得到整体最优解，其最终结果却是最优解的很好近似。 
    5、活动安排
        设有N个活动时间集合，每个活动都要使用同一个资源，比如说会议场，而且同一时间内只能有一个活动使用，每个活动都有一个使用活动的开始si和结束时间fi，即他的使用区间为（si,fi）,现在要求你分配活动占用时间表，即哪些活动占用该会议室，哪些不占用，使得他们不冲突，要求是尽可能多的使参加的活动最大化，即所占时间区间最大化！

背包问题
    问题描述
        给定N个物品和一个容量为C的背包,物品i的重量为Wi，其价值为Vi，背包问题是如何选择装入背包的物品，使得装入背包中物品的总价值最大。注意在背包问题中，可以将某种物品的一部分装入背包中，但是不可以重复装入。
    解决思路
        三种贪心思想：
        　　选择价值最大的物品
        　　选择重量最轻的物品
        　　选择单位重量价值最大的物品
        毫无疑问，我们当然选择第三种咯。
        先把性价比最高的全部装入，最后不足全部装入的部分装入。
